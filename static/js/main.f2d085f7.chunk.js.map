{"version":3,"sources":["logo.svg","SelectSearchBar.js","BarChart.js","App.js","reportWebVitals.js","index.js"],"names":["SelectSearchBar","loadOptions","inputText","a","fetch","response","json","options","className","cacheOptions","defaultOptions","value","this","props","selectedValue","onInputChange","handleInputChange","onChange","handleChange","Component","BarChart","data","labels","datasets","barPercentage","length","backgroundColor","indexAxis","height","width","maintainAspectRatio","plugins","legend","display","App","handlePredictButtonPress","event","preventDefault","state","fighter1SelectedValue","fighter2SelectedValue","fighter1Odds","fighter2Odds","console","log","setState","winner","probability","handleFighter1OddsChange","target","handleFighter2OddsChange","handleFighter1InputChange","fighter1InputValue","handleFighter2InputChange","fighter2InputValue","handleFighter1Change","fighter1BodyStrPerc","fighter1ClinchStrPerc","fighter1CtrlPerc","fighter1DOB","fighter1DistanceStrPerc","fighter1GroundStrPerc","fighter1HeadStrPerc","fighter1Height","fighter1KDAvg","fighter1LastFight","fighter1LegStrPerc","fighter1RD","fighter1Rating","fighter1Reach","fighter1RevAvg","fighter1SApM","fighter1SLpM","fighter1Stance","fighter1StrAtkPerc","fighter1StrDefPerc","fighter1SubAvg","fighter1TDAtkPerc","fighter1TDAvg","fighter1TDDefPerc","handleFighter2Change","fighter2BodyStrPerc","fighter2ClinchStrPerc","fighter2CtrlPerc","fighter2DOB","fighter2DistanceStrPerc","fighter2GroundStrPerc","fighter2HeadStrPerc","fighter2Height","fighter2KDAvg","fighter2LastFight","fighter2LegStrPerc","fighter2RD","fighter2Rating","fighter2Reach","fighter2RevAvg","fighter2SApM","fighter2SLpM","fighter2Stance","fighter2StrAtkPerc","fighter2StrDefPerc","fighter2SubAvg","fighter2TDAtkPerc","fighter2TDAvg","fighter2TDDefPerc","hendleInputChange","type","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2d085f7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\r\nimport AsyncSelect from 'react-select/async'\r\n\r\nclass SelectSearchBar extends Component {\r\n\r\n    loadOptions = async (inputText) => {\r\n        if (!inputText) {\r\n            return [];\r\n        }\r\n        \r\n        const response = await fetch('/api/search/' + inputText);\r\n        const json = await response.json();\r\n        return json.options;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AsyncSelect\r\n                    className=\"Search\"\r\n                    cacheOptions\r\n                    defaultOptions\r\n                    value={this.props.selectedValue}\r\n                    loadOptions={this.loadOptions}\r\n                    onInputChange={this.props.handleInputChange}\r\n                    onChange={this.props.handleChange}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectSearchBar","import React, { Component } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nclass BarChart extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Bar \r\n                    data={{\r\n                        labels: this.props.labels,\r\n                        datasets: [{\r\n                            barPercentage: this.props.labels.length / 11,\r\n                            backgroundColor: '#3369ff',\r\n                            indexAxis: 'y',\r\n                            data: this.props.data\r\n                        }]\r\n                    }}\r\n                    height={400}\r\n                    width={500}\r\n                    options={{\r\n                        maintainAspectRatio: false,\r\n                        plugins: {\r\n                            legend: {\r\n                                display: false\r\n                            }\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BarChart\r\n","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport SelectSearchBar from './SelectSearchBar';\r\nimport BarChart from './BarChart';\r\nimport Carousel from 'react-elastic-carousel';\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      winner : '',\r\n      probability: '',\r\n\r\n      fighter1InputValue: '',\r\n      fighter1SelectedValue: null,\r\n      fighter1BodyStrPerc: 0,\r\n      fighter1ClinchStrPerc: 0,\r\n      fighter1CtrlPerc: 0,\r\n      fighter1DOB: '',\r\n      fighter1DistanceStrPerc: 0,\r\n      fighter1GroundStrPerc: 0,\r\n      fighter1HeadStrPerc: 0,\r\n      fighter1Height: '',\r\n      fighter1KDAvg: 0,\r\n      fighter1LastFight: '',\r\n      fighter1LegStrPerc: 0,\r\n      fighter1RD: 0,\r\n      fighter1Rating: 0,\r\n      fighter1Reach: '',\r\n      fighter1RevAvg: 0,\r\n      fighter1SApM: 0,\r\n      fighter1SLpM: 0,\r\n      fighter1Stance: '',\r\n      fighter1StrAtkPerc: 0,\r\n      fighter1StrDefPerc: 0,\r\n      fighter1SubAvg: 0,\r\n      fighter1TDAtkPerc: 0,\r\n      fighter1TDAvg: 0,\r\n      fighter1TDDefPerc: 0,\r\n      fighter1Odds: '',\r\n\r\n      fighter2InputValue: '',\r\n      fighter2SelectedValue: null,\r\n      fighter2BodyStrPerc: 0,\r\n      fighter2ClinchStrPerc: 0,\r\n      fighter2CtrlPerc: 0,\r\n      fighter2DOB: '',\r\n      fighter2DistanceStrPerc: 0,\r\n      fighter2GroundStrPerc: 0,\r\n      fighter2HeadStrPerc: 0,\r\n      fighter2Height: '',\r\n      fighter2KDAvg: 0,\r\n      fighter2LastFight: '',\r\n      fighter2LegStrPerc: 0,\r\n      fighter2RD: 0,\r\n      fighter2Rating: 0,\r\n      fighter2Reach: '',\r\n      fighter2RevAvg: 0,\r\n      fighter2SApM: 0,\r\n      fighter2SLpM: 0,\r\n      fighter2Stance: '',\r\n      fighter2StrAtkPerc: 0,\r\n      fighter2StrDefPerc: 0,\r\n      fighter2SubAvg: 0,\r\n      fighter2TDAtkPerc: 0,\r\n      fighter2TDAvg: 0,\r\n      fighter2TDDefPerc: 0,\r\n      fighter2Odds: ''\r\n    }\r\n  }\r\n\r\n  handlePredictButtonPress = async (event) => {\r\n    event.preventDefault()\r\n\r\n    const response = await fetch('/predict/' + this.state.fighter1SelectedValue.value + '/' + this.state.fighter2SelectedValue.value + '/' + this.state.fighter1Odds + '/' + this.state.fighter2Odds);\r\n    const json = await response.json();\r\n    console.log(json)\r\n    this.setState({\r\n      winner: json.winner,\r\n      probability: json.probability\r\n    })\r\n  }\r\n\r\n  handleFighter1OddsChange = (event) => {\r\n    event.preventDefault()\r\n\r\n    this.setState({\r\n      fighter1Odds: event.target.value\r\n    })\r\n  }\r\n\r\n  handleFighter2OddsChange = (event) => {\r\n    event.preventDefault()\r\n\r\n    this.setState({\r\n      fighter2Odds: event.target.value\r\n    })\r\n  }\r\n\r\n  handleFighter1InputChange = value => {\r\n    this.setState({\r\n      fighter1InputValue: value\r\n    })\r\n  }\r\n\r\n  handleFighter2InputChange = value => {\r\n    this.setState({\r\n      fighter2InputValue: value\r\n    })\r\n  }\r\n\r\n  handleFighter1Change = async (value) => {\r\n    this.setState({\r\n      fighter1SelectedValue: value\r\n    })\r\n    \r\n    const response = await fetch('/api/stats/' + value.value);\r\n    const json = await response.json();\r\n\r\n    this.setState({\r\n        fighter1BodyStrPerc: json['Body Str. %'],\r\n        fighter1ClinchStrPerc: json['Clinch Str. %'],\r\n        fighter1CtrlPerc: json['Ctrl. %'],\r\n        fighter1DOB: json['DOB'],\r\n        fighter1DistanceStrPerc: json['Distance Str. %'],\r\n        fighter1GroundStrPerc: json['Ground Str. %'],\r\n        fighter1HeadStrPerc: json['Head Str. %'],\r\n        fighter1Height: json['Height'],\r\n        fighter1KDAvg: json['KD Avg.'],\r\n        fighter1LastFight: json['Last Fight'],\r\n        fighter1LegStrPerc: json['Leg Str. %'],\r\n        fighter1RD: json['RD'],\r\n        fighter1Rating: json['Rating'],\r\n        fighter1Reach: json['Reach'],\r\n        fighter1RevAvg: json['Rev. Avg.'],\r\n        fighter1SApM: json['SApM'],\r\n        fighter1SLpM: json['SLpM'],\r\n        fighter1Stance: json['Stance'],\r\n        fighter1StrAtkPerc: json['Str. Atk. %'],\r\n        fighter1StrDefPerc: json['Str. Def. %'],\r\n        fighter1SubAvg: json['Sub. Avg.'],\r\n        fighter1TDAtkPerc: json['TD Atk. %'],\r\n        fighter1TDAvg: json['TD Avg.'],\r\n        fighter1TDDefPerc: json['TD Def. %']\r\n    })\r\n  }\r\n\r\n  handleFighter2Change = async (value) => {\r\n    this.setState({\r\n      fighter2SelectedValue: value,\r\n    })\r\n    \r\n    const response = await fetch('/api/stats/' + value.value);\r\n    const json = await response.json();\r\n\r\n    this.setState({\r\n      fighter2BodyStrPerc: json['Body Str. %'],\r\n      fighter2ClinchStrPerc: json['Clinch Str. %'],\r\n      fighter2CtrlPerc: json['Ctrl. %'],\r\n      fighter2DOB: json['DOB'],\r\n      fighter2DistanceStrPerc: json['Distance Str. %'],\r\n      fighter2GroundStrPerc: json['Ground Str. %'],\r\n      fighter2HeadStrPerc: json['Head Str. %'],\r\n      fighter2Height: json['Height'],\r\n      fighter2KDAvg: json['KD Avg.'],\r\n      fighter2LastFight: json['Last Fight'],\r\n      fighter2LegStrPerc: json['Leg Str. %'],\r\n      fighter2RD: json['RD'],\r\n      fighter2Rating: json['Rating'],\r\n      fighter2Reach: json['Reach'],\r\n      fighter2RevAvg: json['Rev. Avg.'],\r\n      fighter2SApM: json['SApM'],\r\n      fighter2SLpM: json['SLpM'],\r\n      fighter2Stance: json['Stance'],\r\n      fighter2StrAtkPerc: json['Str. Atk. %'],\r\n      fighter2StrDefPerc: json['Str. Def. %'],\r\n      fighter2SubAvg: json['Sub. Avg.'],\r\n      fighter2TDAtkPerc: json['TD Atk. %'],\r\n      fighter2TDAvg: json['TD Avg.'],\r\n      fighter2TDDefPerc: json['TD Def. %']\r\n   })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"Header\">\r\n          <h3> UFC Fight Predictor </h3>\r\n        </div>\r\n        <div className=\"Info\">\r\n          <p> Created by: Janahan Dhushenthen and Jordan Schneider </p>\r\n          <p> Last updated: 26/06/2021 </p>\r\n        </div>\r\n\r\n        <div className=\"Row\">\r\n          <div className=\"Card\">\r\n            <h3><b>Fighter 1</b></h3>\r\n\r\n            <SelectSearchBar selectedValue={this.state.fighter1SelectedValue} hendleInputChange={this.handleFighter1InputChange} handleChange={this.handleFighter1Change}></SelectSearchBar>\r\n            \r\n            <form>\r\n              <label> Decimal Fight Odds: </label>\r\n              <input type=\"text\" value={this.state.fighter1Odds} onChange={this.handleFighter1OddsChange}></input>\r\n            </form>\r\n\r\n            <p> Height: {this.state.fighter1Height}\" | Reach: {this.state.fighter1Reach}\" | Stance: {this.state.fighter1Stance} | DOB: {this.state.fighter1DOB} | Last Fight: {this.state.fighter1LastFight} </p>\r\n\r\n            <Carousel>\r\n              <BarChart \r\n                labels={['Rating', 'RD']}\r\n                data={[this.state.fighter1Rating, this.state.fighter1RD]}\r\n              ></BarChart>\r\n              <BarChart \r\n                labels={['SLpM', 'SApM', 'TD Avg.', 'KD Avg.', 'Sub. Avg.', 'Rev. Avg.']}\r\n                data={[this.state.fighter1SLpM, this.state.fighter1SApM, this.state.fighter1TDAvg, this.state.fighter1KDAvg, this.state.fighter1SubAvg, this.state.fighter1RevAvg]}\r\n                ></BarChart>\r\n              <BarChart \r\n                labels={['Str. Atk. %', 'Str. Def. %', 'TD Atk. %', 'TD Def. %', 'Ctrl. %', 'Head Str. %', 'Body Str. %', 'Leg Str. %', 'Distance Str. %', 'Clinch Str. %', 'Ground Str. %']}\r\n                data={[this.state.fighter1StrAtkPerc, this.state.fighter1StrDefPerc, this.state.fighter1TDAtkPerc, this.state.fighter1TDDefPerc, this.state.fighter1CtrlPerc, this.state.fighter1HeadStrPerc, this.state.fighter1BodyStrPerc, this.state.fighter1LegStrPerc, this.state.fighter1DistanceStrPerc, this.state.fighter1ClinchStrPerc, this.state.fighter1GroundStrPerc]}\r\n              ></BarChart>\r\n            </Carousel>\r\n          </div>\r\n\r\n          <div className=\"Card\">\r\n            <h3><b>Fighter 2</b></h3>\r\n\r\n            <SelectSearchBar selectedValue={this.state.fighter2SelectedValue} hendleInputChange={this.handleFighter2InputChange} handleChange={this.handleFighter2Change}></SelectSearchBar>\r\n            \r\n            <form>\r\n              <label> Decimal Fight Odds: </label>\r\n              <input type=\"text\" value={this.state.fighter2Odds} onChange={this.handleFighter2OddsChange}></input>\r\n            </form>\r\n\r\n            <p> Height: {this.state.fighter2Height}\" | Reach: {this.state.fighter2Reach}\" | Stance: {this.state.fighter2Stance} | DOB: {this.state.fighter2DOB} | Last Fight: {this.state.fighter2LastFight} </p>\r\n\r\n            <Carousel>\r\n            <BarChart \r\n                labels={['Rating', 'RD']}\r\n                data={[this.state.fighter2Rating, this.state.fighter2RD]}\r\n              ></BarChart>\r\n              <BarChart \r\n                labels={['SLpM', 'SApM', 'TD Avg.', 'KD Avg.', 'Sub. Avg.', 'Rev. Avg.']}\r\n                data={[this.state.fighter2SLpM, this.state.fighter2SApM, this.state.fighter2TDAvg, this.state.fighter2KDAvg, this.state.fighter2SubAvg, this.state.fighter2RevAvg]}\r\n                ></BarChart>\r\n              <BarChart \r\n                labels={['Str. Atk. %', 'Str. Def. %', 'TD Atk. %', 'TD Def. %', 'Ctrl. %', 'Head Str. %', 'Body Str. %', 'Leg Str. %', 'Distance Str. %', 'Clinch Str. %', 'Ground Str. %']}\r\n                data={[this.state.fighter2StrAtkPerc, this.state.fighter2StrDefPerc, this.state.fighter2TDAtkPerc, this.state.fighter2TDDefPerc, this.state.fighter2CtrlPerc, this.state.fighter2HeadStrPerc, this.state.fighter2BodyStrPerc, this.state.fighter2LegStrPerc, this.state.fighter2DistanceStrPerc, this.state.fighter2ClinchStrPerc, this.state.fighter2GroundStrPerc]}\r\n              ></BarChart>\r\n            </Carousel>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"Row\">\r\n          <div className=\"Card\">\r\n            <p className=\"Winner\">WINNER: {\r\n              this.state.winner != '' && \r\n              <b> {this.state.winner} ({this.state.probability}%) </b>\r\n            }\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"Row\">\r\n          <button className=\"Button\" onClick={this.handlePredictButtonPress}>\r\n            Predict\r\n          </button>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}